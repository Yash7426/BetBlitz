{
  "address": "0x63d7FB7bc0be4DDB9580D82615741A468A427EDa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_entryFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserWon",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "BetOn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "WinningAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "Bet_On",
          "type": "uint256"
        }
      ],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gamblers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gamblersToAmountBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllWinningAmounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserEntryStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "win",
          "type": "uint256"
        }
      ],
      "name": "setWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasEntered",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd048e38fe9af60258279ab39edcc418e4c8f4a202ec8736e1ed2749f1f32e14c",
  "receipt": {
    "to": null,
    "from": "0xc3c00e57421D8A75dadbD7b1469B94F44f4d6588",
    "contractAddress": "0x63d7FB7bc0be4DDB9580D82615741A468A427EDa",
    "transactionIndex": 87,
    "gasUsed": "1023860",
    "logsBloom": "0x
    "blockHash": "0x2de2bb7cfd2bb2df02f5d67de83c21dd656b6832a510a38fa2b6fdba95f37ef7",
    "transactionHash": "0xd048e38fe9af60258279ab39edcc418e4c8f4a202ec8736e1ed2749f1f32e14c",
    "logs": [],
    "blockNumber": 5766891,
    "cumulativeGasUsed": "12194768",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "665b315326b9e4786eb07dfc2cc5b4a7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserWon\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"BetOn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"WinningAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Bet_On\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamblers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamblersToAmountBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllWinningAmounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEntryStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"win\",\"type\":\"uint256\"}],\"name\":\"setWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasEntered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Betting.sol\":\"Betting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Betting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Betting {\\n    address private immutable owner;\\n    uint256 public immutable entryFee;\\n    uint256 public winner = 0;\\n\\n    struct User {\\n        bool hasEntered;\\n    }\\n\\n    mapping(address => User) public users;\\n    mapping(address => uint256) public gamblersToAmountBet;\\n    mapping(address => uint256) public BetOn;\\n    mapping(address => uint) public WinningAmount;\\n    address[] public gamblers;\\n\\n    event UserEntered(address user, uint256 amount);\\n    event UserWon(address user, uint256 amount);\\n    event UserLost(address user, uint256 amount);\\n\\n    constructor(uint256 _entryFee) {\\n        owner = msg.sender;\\n        entryFee = _entryFee;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\n        _;\\n    }\\n\\n    function enter(uint256 Bet_On) public payable {\\n        require(msg.value >= (entryFee / 10 ** 18), \\\"Insufficient entry fee\\\");\\n        require(!users[msg.sender].hasEntered, \\\"You have already entered\\\");\\n        gamblersToAmountBet[msg.sender] = msg.value;\\n        BetOn[msg.sender] = Bet_On;\\n        gamblers.push(msg.sender);\\n        users[msg.sender].hasEntered = true;\\n        emit UserEntered(msg.sender, msg.value);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getEntryFee() public view returns (uint256) {\\n        return entryFee;\\n    }\\n\\n    function getUserEntryStatus(address user) public view returns (bool) {\\n        return users[user].hasEntered;\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function setWinner(uint256 win) public onlyOwner {\\n        winner = win;\\n    }\\n\\n    function getAllWinningAmounts()\\n        public\\n        view\\n        returns (address[] memory, uint256[] memory)\\n    {\\n        uint256 length = gamblers.length;\\n        address[] memory addresses = new address[](length);\\n        uint256[] memory amounts = new uint256[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            addresses[i] = gamblers[i];\\n            amounts[i] = WinningAmount[gamblers[i]];\\n        }\\n\\n        return (addresses, amounts);\\n    }\\n}\\n\",\"keccak256\":\"0x749b4e067ace3a13f07ef0c279fe7c55519714173e084c66dadee376564f87db\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052600080553480156200001557600080fd5b50604051620012c4380380620012c483398181016040528101906200003b9190620000be565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a0818152505050620000f0565b600080fd5b6000819050919050565b620000988162000083565b8114620000a457600080fd5b50565b600081519050620000b8816200008d565b92915050565b600060208284031215620000d757620000d66200007e565b5b6000620000e784828501620000a7565b91505092915050565b60805160a05161118b62000139600039600081816103af0152818161066301526109140152600081816103d3015281816104e2015281816105700152610634015261118b6000f3fe6080604052600436106100e85760003560e01c80637a53326f1161008a578063dfbf53ae11610059578063dfbf53ae146102ee578063e586a4f014610319578063e678471614610344578063f48950f214610370576100e8565b80637a53326f1461022d578063893d20e81461026a578063a59f3e0c14610295578063a87430ba146102b1576100e8565b80631ed4ff0b116100c65780631ed4ff0b1461016c5780632aaf9c66146101a95780632d9f7a08146101e65780633ccfd60b14610223576100e8565b8063072ea61c146100ed5780630df716021461011857806312065fe014610141575b600080fd5b3480156100f957600080fd5b506101026103ad565b60405161010f9190610b65565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a9190610bb1565b6103d1565b005b34801561014d57600080fd5b50610156610469565b6040516101639190610b65565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610c3c565b610471565b6040516101a09190610b65565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb9190610bb1565b610489565b6040516101dd9190610c78565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190610c3c565b6104c8565b60405161021a9190610b65565b60405180910390f35b61022b6104e0565b005b34801561023957600080fd5b50610254600480360381019061024f9190610c3c565b6105d7565b6040516102619190610cae565b60405180910390f35b34801561027657600080fd5b5061027f610630565b60405161028c9190610c78565b60405180910390f35b6102af60048036038101906102aa9190610bb1565b610658565b005b3480156102bd57600080fd5b506102d860048036038101906102d39190610c3c565b6108df565b6040516102e59190610cae565b60405180910390f35b3480156102fa57600080fd5b5061030361090a565b6040516103109190610b65565b60405180910390f35b34801561032557600080fd5b5061032e610910565b60405161033b9190610b65565b60405180910390f35b34801561035057600080fd5b50610359610938565b604051610367929190610e45565b60405180910390f35b34801561037c57600080fd5b5061039760048036038101906103929190610c3c565b610b34565b6040516103a49190610b65565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045690610eff565b60405180910390fd5b8060008190555050565b600047905090565b60036020528060005260406000206000915090505481565b6005818154811061049957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056590610eff565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156105d4573d6000803e3d6000fd5b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000061068c9190610f7d565b3410156106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590610ffa565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161561075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611066565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb662f0beeb38e2aa790755858e25ee4edac93ec1ed278a0d1d28f86721a646b333346040516108d4929190611086565b60405180910390a150565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6060806000600580549050905060008167ffffffffffffffff811115610961576109606110af565b5b60405190808252806020026020018201604052801561098f5781602001602082028036833780820191505090505b50905060008267ffffffffffffffff8111156109ae576109ad6110af565b5b6040519080825280602002602001820160405280156109dc5781602001602082028036833780820191505090505b50905060005b83811015610b2657600581815481106109fe576109fd6110de565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838281518110610a3c57610a3b6110de565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506004600060058381548110610a8e57610a8d6110de565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610b0757610b066110de565b5b6020026020010181815250508080610b1e9061110d565b9150506109e2565b508181945094505050509091565b60046020528060005260406000206000915090505481565b6000819050919050565b610b5f81610b4c565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b600080fd5b610b8e81610b4c565b8114610b9957600080fd5b50565b600081359050610bab81610b85565b92915050565b600060208284031215610bc757610bc6610b80565b5b6000610bd584828501610b9c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0982610bde565b9050919050565b610c1981610bfe565b8114610c2457600080fd5b50565b600081359050610c3681610c10565b92915050565b600060208284031215610c5257610c51610b80565b5b6000610c6084828501610c27565b91505092915050565b610c7281610bfe565b82525050565b6000602082019050610c8d6000830184610c69565b92915050565b60008115159050919050565b610ca881610c93565b82525050565b6000602082019050610cc36000830184610c9f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cfe81610bfe565b82525050565b6000610d108383610cf5565b60208301905092915050565b6000602082019050919050565b6000610d3482610cc9565b610d3e8185610cd4565b9350610d4983610ce5565b8060005b83811015610d7a578151610d618882610d04565b9750610d6c83610d1c565b925050600181019050610d4d565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610dbc81610b4c565b82525050565b6000610dce8383610db3565b60208301905092915050565b6000602082019050919050565b6000610df282610d87565b610dfc8185610d92565b9350610e0783610da3565b8060005b83811015610e38578151610e1f8882610dc2565b9750610e2a83610dda565b925050600181019050610e0b565b5085935050505092915050565b60006040820190508181036000830152610e5f8185610d29565b90508181036020830152610e738184610de7565b90509392505050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610ee9602583610e7c565b9150610ef482610e8d565b604082019050919050565b60006020820190508181036000830152610f1881610edc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f8882610b4c565b9150610f9383610b4c565b925082610fa357610fa2610f1f565b5b828204905092915050565b7f496e73756666696369656e7420656e7472792066656500000000000000000000600082015250565b6000610fe4601683610e7c565b9150610fef82610fae565b602082019050919050565b6000602082019050818103600083015261101381610fd7565b9050919050565b7f596f75206861766520616c726561647920656e74657265640000000000000000600082015250565b6000611050601883610e7c565b915061105b8261101a565b602082019050919050565b6000602082019050818103600083015261107f81611043565b9050919050565b600060408201905061109b6000830185610c69565b6110a86020830184610b56565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061111882610b4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361114a57611149610f4e565b5b60018201905091905056fea2646970667358221220f8a157835b0354ba4520cf066807980b5a585f8329b44fe547c33e951319361e64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80637a53326f1161008a578063dfbf53ae11610059578063dfbf53ae146102ee578063e586a4f014610319578063e678471614610344578063f48950f214610370576100e8565b80637a53326f1461022d578063893d20e81461026a578063a59f3e0c14610295578063a87430ba146102b1576100e8565b80631ed4ff0b116100c65780631ed4ff0b1461016c5780632aaf9c66146101a95780632d9f7a08146101e65780633ccfd60b14610223576100e8565b8063072ea61c146100ed5780630df716021461011857806312065fe014610141575b600080fd5b3480156100f957600080fd5b506101026103ad565b60405161010f9190610b65565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a9190610bb1565b6103d1565b005b34801561014d57600080fd5b50610156610469565b6040516101639190610b65565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610c3c565b610471565b6040516101a09190610b65565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb9190610bb1565b610489565b6040516101dd9190610c78565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190610c3c565b6104c8565b60405161021a9190610b65565b60405180910390f35b61022b6104e0565b005b34801561023957600080fd5b50610254600480360381019061024f9190610c3c565b6105d7565b6040516102619190610cae565b60405180910390f35b34801561027657600080fd5b5061027f610630565b60405161028c9190610c78565b60405180910390f35b6102af60048036038101906102aa9190610bb1565b610658565b005b3480156102bd57600080fd5b506102d860048036038101906102d39190610c3c565b6108df565b6040516102e59190610cae565b60405180910390f35b3480156102fa57600080fd5b5061030361090a565b6040516103109190610b65565b60405180910390f35b34801561032557600080fd5b5061032e610910565b60405161033b9190610b65565b60405180910390f35b34801561035057600080fd5b50610359610938565b604051610367929190610e45565b60405180910390f35b34801561037c57600080fd5b5061039760048036038101906103929190610c3c565b610b34565b6040516103a49190610b65565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045690610eff565b60405180910390fd5b8060008190555050565b600047905090565b60036020528060005260406000206000915090505481565b6005818154811061049957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056590610eff565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156105d4573d6000803e3d6000fd5b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000061068c9190610f7d565b3410156106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590610ffa565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161561075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611066565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb662f0beeb38e2aa790755858e25ee4edac93ec1ed278a0d1d28f86721a646b333346040516108d4929190611086565b60405180910390a150565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6060806000600580549050905060008167ffffffffffffffff811115610961576109606110af565b5b60405190808252806020026020018201604052801561098f5781602001602082028036833780820191505090505b50905060008267ffffffffffffffff8111156109ae576109ad6110af565b5b6040519080825280602002602001820160405280156109dc5781602001602082028036833780820191505090505b50905060005b83811015610b2657600581815481106109fe576109fd6110de565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838281518110610a3c57610a3b6110de565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506004600060058381548110610a8e57610a8d6110de565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610b0757610b066110de565b5b6020026020010181815250508080610b1e9061110d565b9150506109e2565b508181945094505050509091565b60046020528060005260406000206000915090505481565b6000819050919050565b610b5f81610b4c565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b600080fd5b610b8e81610b4c565b8114610b9957600080fd5b50565b600081359050610bab81610b85565b92915050565b600060208284031215610bc757610bc6610b80565b5b6000610bd584828501610b9c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0982610bde565b9050919050565b610c1981610bfe565b8114610c2457600080fd5b50565b600081359050610c3681610c10565b92915050565b600060208284031215610c5257610c51610b80565b5b6000610c6084828501610c27565b91505092915050565b610c7281610bfe565b82525050565b6000602082019050610c8d6000830184610c69565b92915050565b60008115159050919050565b610ca881610c93565b82525050565b6000602082019050610cc36000830184610c9f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cfe81610bfe565b82525050565b6000610d108383610cf5565b60208301905092915050565b6000602082019050919050565b6000610d3482610cc9565b610d3e8185610cd4565b9350610d4983610ce5565b8060005b83811015610d7a578151610d618882610d04565b9750610d6c83610d1c565b925050600181019050610d4d565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610dbc81610b4c565b82525050565b6000610dce8383610db3565b60208301905092915050565b6000602082019050919050565b6000610df282610d87565b610dfc8185610d92565b9350610e0783610da3565b8060005b83811015610e38578151610e1f8882610dc2565b9750610e2a83610dda565b925050600181019050610e0b565b5085935050505092915050565b60006040820190508181036000830152610e5f8185610d29565b90508181036020830152610e738184610de7565b90509392505050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610ee9602583610e7c565b9150610ef482610e8d565b604082019050919050565b60006020820190508181036000830152610f1881610edc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f8882610b4c565b9150610f9383610b4c565b925082610fa357610fa2610f1f565b5b828204905092915050565b7f496e73756666696369656e7420656e7472792066656500000000000000000000600082015250565b6000610fe4601683610e7c565b9150610fef82610fae565b602082019050919050565b6000602082019050818103600083015261101381610fd7565b9050919050565b7f596f75206861766520616c726561647920656e74657265640000000000000000600082015250565b6000611050601883610e7c565b915061105b8261101a565b602082019050919050565b6000602082019050818103600083015261107f81611043565b9050919050565b600060408201905061109b6000830185610c69565b6110a86020830184610b56565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061111882610b4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361114a57611149610f4e565b5b60018201905091905056fea2646970667358221220f8a157835b0354ba4520cf066807980b5a585f8329b44fe547c33e951319361e64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Betting.sol:Betting",
        "label": "winner",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 16,
        "contract": "contracts/Betting.sol:Betting",
        "label": "users",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(User)11_storage)"
      },
      {
        "astId": 20,
        "contract": "contracts/Betting.sol:Betting",
        "label": "gamblersToAmountBet",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 24,
        "contract": "contracts/Betting.sol:Betting",
        "label": "BetOn",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 28,
        "contract": "contracts/Betting.sol:Betting",
        "label": "WinningAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 31,
        "contract": "contracts/Betting.sol:Betting",
        "label": "gamblers",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(User)11_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Betting.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)11_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(User)11_storage": {
        "encoding": "inplace",
        "label": "struct Betting.User",
        "members": [
          {
            "astId": 10,
            "contract": "contracts/Betting.sol:Betting",
            "label": "hasEntered",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}